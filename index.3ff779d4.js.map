{"mappings":"AAMA,MAAMA,aAAeC,SAASC,eAAe,OAGvCC,IAAM,CAACC,EAASC,KACpB,MAAMC,EAAQL,SAASM,cAAc,MACrCD,EAAME,UAAYJ,EAEdC,GACFC,EAAMG,UAAUC,IAAIL,GAGtBL,aAAaW,YAAYL,GACzBM,QAAQT,IAAIC,GACZJ,aAAaa,UAAYb,aAAac,cAGxCX,IAAI,gBAEJ,MAAMY,YAAcd,SAASe,uBAAuB,eAAe,GACnED,YAAYE,iBAAiB,SAAS,KAChCF,YAAYN,UAAUS,SAAS,YACjCH,YAAYN,UAAUU,OAAO,YAE7BJ,YAAYN,UAAUC,IAAI,eAK9B,MAAMU,aAAgBC,IACpBlB,IAAI,oDAKAmB,YAAeC,IACnB,MAAMC,EAAkBvB,SAASC,eAAe,eAC5CqB,GACFC,EAAgBf,UAAUC,IAAI,WAC9Bc,EAAgBhB,UACd,oDAEFgB,EAAgBf,UAAUU,OAAO,WACjCK,EAAgBhB,UACd,yDAKAiB,aAAe,KACnBH,aAAY,IAIRI,YAAc,KAClBJ,aAAY,IAGdK,OAAOV,iBAAiB,QAASG,cACjCO,OAAOV,iBAAiB,QAASQ,cACjCE,OAAOV,iBAAiB,OAAQS,aAEhCJ,aAAY,GAsBZ,MAAMM,mBAAqB,KAEzBD,OAAOE,YAAW,WACZ5B,SAAS6B,yBAAyBC,mBAIF,qBAA9B9B,SAAS6B,cAAcE,IAIzB7B,IAAI,oDAAqD,aAG5D,IAGLwB,OAAOV,iBAAiB,OAAQW","sources":["src/script.js"],"sourcesContent":["/**\n * INTERNAL CODE FOR CODESANDBOX EXAMPLE\n *\n * You can ignore this. All of this only serves the example.\n */\n\nconst logContainer = document.getElementById(\"log\");\n\n// Logging tool for easy presentation\nconst log = (message, classname) => {\n  const entry = document.createElement(\"li\");\n  entry.innerHTML = message;\n\n  if (classname) {\n    entry.classList.add(classname);\n  }\n\n  logContainer.appendChild(entry);\n  console.log(message);\n  logContainer.scrollTop = logContainer.scrollHeight;\n};\n\nlog(\"Hello world!\");\n\nconst explanation = document.getElementsByClassName(\"explanation\")[0];\nexplanation.addEventListener(\"click\", () => {\n  if (explanation.classList.contains(\"expanded\")) {\n    explanation.classList.remove(\"expanded\");\n  } else {\n    explanation.classList.add(\"expanded\");\n  }\n});\n\n// Logs clicks on the document itself, to differentiate against clicks NOT on the document.\nconst clickHandler = (e) => {\n  log(\"I clicked somewhere in the containing document.\");\n};\n\n// Display the current status of the document focus. This is important to understand for explaining\n// the workaround \"click handler\".\nconst focusStatus = (focused) => {\n  const statusContainer = document.getElementById(\"focusStatus\");\n  if (focused) {\n    statusContainer.classList.add(\"focused\");\n    statusContainer.innerHTML =\n      \"Window is FOCUSED; iframe click can be detected\";\n  } else {\n    statusContainer.classList.remove(\"focused\");\n    statusContainer.innerHTML =\n      \"Window is UNFOCUSED; iframe click cannot be detected\";\n  }\n};\n\n// Handles the document's focus event. Simply displays info.\nconst focusHandler = () => {\n  focusStatus(true);\n};\n\n// Handles the document's blur event. Simply displays info.\nconst blurHandler = () => {\n  focusStatus(false);\n};\n\nwindow.addEventListener(\"click\", clickHandler);\nwindow.addEventListener(\"focus\", focusHandler);\nwindow.addEventListener(\"blur\", blurHandler);\n\nfocusStatus(false);\n\n/**\n * RELEVANT CODE FOR MILLIONKLICK IMPLEMENTATION\n *\n * This is what matters.\n */\n\n/**\n * Handles the window's \"blur\" event to check whether focus was lost specifically\n * on the ad iframe we are targeting.\n *\n * This creates a fake \"click handler\" which handles cross-origin iframes. However, it\n * comes with the caveat of only working if the window is currently *focused*.\n *\n * This means that at least one click needs to happen in the window before the event will register.\n * This resets every time the window loses focus.\n *\n * Therefore it is not a perfect solution, but it's what we got.\n *\n * Due to iframe nesting, this has to be implemented on the topmost layer (i.e. the GMX site).\n */\nconst iframeClickHandler = () => {\n  // setTimeout for Firefox support.\n  window.setTimeout(function () {\n    if (document.activeElement instanceof HTMLIFrameElement) {\n      // A click happened inside an iframe.\n\n      // Check of your choice to determine if the iframe is the correct one.\n      if (document.activeElement.id === \"myTargetedIframe\") {\n        // A click happened in the exact iframe we're targeting.\n\n        // Mission complete! Perform your desired code here.\n        log(\"Success! I clicked inside the targeted ad iframe.\", \"success\");\n      }\n    }\n  }, 0);\n};\n\nwindow.addEventListener(\"blur\", iframeClickHandler);\n"],"names":["logContainer","document","getElementById","log","message","classname","entry","createElement","innerHTML","classList","add","appendChild","console","scrollTop","scrollHeight","explanation","getElementsByClassName","addEventListener","contains","remove","clickHandler","e","focusStatus","focused","statusContainer","focusHandler","blurHandler","window","iframeClickHandler","setTimeout","activeElement","HTMLIFrameElement","id"],"version":3,"file":"index.3ff779d4.js.map"}